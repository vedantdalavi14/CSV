Metadata-Version: 2.4
Name: smart-csv-cleaner
Version: 1.0.0
Summary: A powerful Python CLI tool for cleaning messy CSV files with natural language support
Author-email: Smart CSV Cleaner Team <contact@smartcsvcleaner.com>
License: MIT
Project-URL: Homepage, https://github.com/your-username/smart-csv-cleaner
Project-URL: Bug Reports, https://github.com/your-username/smart-csv-cleaner/issues
Project-URL: Source, https://github.com/your-username/smart-csv-cleaner
Keywords: csv,data-cleaning,pandas,cli,natural-language,data-science
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: click>=8.0.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: tabulate>=0.8.9
Requires-Dist: openpyxl>=3.0.0
Requires-Dist: numpy>=1.20.0
Requires-Dist: flask>=2.0.0
Requires-Dist: werkzeug>=2.0.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0.0; extra == "dev"
Requires-Dist: pytest-cov>=2.12.0; extra == "dev"
Requires-Dist: black>=21.0.0; extra == "dev"
Requires-Dist: flake8>=3.9.0; extra == "dev"
Requires-Dist: mypy>=0.910; extra == "dev"
Provides-Extra: nlp
Requires-Dist: spacy>=3.4.0; extra == "nlp"
Requires-Dist: en-core-web-sm@ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.4.1/en_core_web_sm-3.4.1.tar.gz ; extra == "nlp"

# Smart CSV Cleaner

A powerful, user-friendly **Python CLI tool** for cleaning messy CSV files. Like Black is for Python formatting, this tool is for CSVs â€” but smarter. It supports **both traditional CLI flags** and **natural language commands**.

## ðŸš€ Features

### Dual Input Support
- **Traditional CLI flags**: `--fix-names`, `--fix-missing mean`, `--drop-outliers zscore`
- **Natural language commands**: `"fix column names and remove outliers"`
- **Combined approach**: Mix both for maximum flexibility

### Core Cleaning Operations

#### 1. Column Name Standardization
- Strip whitespace and normalize case
- Replace spaces with underscores
- Remove special characters
- Ensure unique column names
- Handle numeric prefixes

#### 2. Missing Data Handling
- **Multiple strategies**: mean, median, mode, drop
- **Smart detection**: Works with numeric and categorical data
- **Column-specific**: Different strategies per data type
- **Comprehensive logging**: Track all changes

#### 3. Outlier Detection & Removal
- **Z-score method**: Configurable threshold (default: 3.0)
- **IQR method**: Interquartile range with 1.5x multiplier
- **Numeric columns only**: Automatically detects applicable columns
- **Detailed reporting**: Shows outliers removed per column

#### 4. Data Type Standardization
- **Automatic detection**: String â†’ datetime, int, float, bool
- **Smart conversion**: Handles various date formats
- **Boolean parsing**: Recognizes true/false, yes/no, 1/0
- **Categorical optimization**: Converts appropriate columns to category type

#### 5. Export Options
- **CSV output**: UTF-8 encoded, clean formatting
- **Excel export**: With auto-sized columns and summary sheets
- **Custom naming**: Specify output path or use auto-generated names

#### 6. Comprehensive Logging
- **Detailed tracking**: Every transformation timestamped
- **Operation summary**: Clear before/after statistics
- **Error handling**: Graceful failure with informative messages
- **Verbose mode**: Additional debugging information

## ðŸ“¦ Installation

### Requirements
- Python 3.7+
- pandas
- click
- tabulate
- openpyxl
- numpy

### Install Dependencies
```bash
pip install pandas click tabulate openpyxl numpy
